'''Примечание. Используйте только те инструкции и функции, которые мы
уже изучили.
Упражнения
1. Напишите функцию, которая рисует сетку следующим образом:
+ - -
|
|
|
|
+ - -
|
|
|
|
+ - -
- - + - -
|
|
|
|
- - + - -
|
|
|
|
- - + - -
- - +
|
|
|
|
- - +
|
|
|
|
- - +
Совет. Чтобы вывести более одного значения в строке, вы можете напечатать последовательность значений через запятую:
print('+', '–')
По умолчанию функция print() переходит на следующую строку, но вы
можете переопределить это поведение и указать пробел в конце, например
так:
print('+', end=' ')
print('–')
Результатом выполнения этих инструкций будет '+ –'.
Функция print без аргумента завершает текущую строку и переходит
на следующую.
2. Напишите функцию, которая рисует похожую сетку с четырьмя строками и четырьмя столбцами.
Решение: thinkpython2.com/code/grid.py. Примечание: это упражнение основано на задаче, впервые опубликованной в книге Стива Олайна,
Practical C Programming, Third Edition, вышедшей в издательстве O'Reilly
Media в 1997 году'''


def upper_line(args):
    print(args[0], args[1] * 4, args[0], args[1] * 4, args[0], args[1] * 4, args[0])


def usual_line(args):
    print(args[0], args[1] * 4, args[0], args[1] * 4, args[0], args[1] * 4, args[0])


def duplicate(func, args):
    func(args)
    func(args)


def duplicate_four(func, args):
    duplicate(func, args)
    duplicate(func, args)


def draw():
    upper_line(('+', '-'))
    duplicate_four(usual_line, ('|', ' '))
    upper_line(('+', '-'))
    duplicate_four(usual_line, ('|', ' '))
    upper_line(('+', '-'))


draw()